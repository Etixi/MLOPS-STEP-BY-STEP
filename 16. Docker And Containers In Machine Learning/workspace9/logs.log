2024-04-02 20:45:04,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-02 20:45:04,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-02 20:45:04,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-02 20:45:04,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-02 20:45:05,469:INFO:PyCaret RegressionExperiment
2024-04-02 20:45:05,469:INFO:Logging name: diamond
2024-04-02 20:45:05,470:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-02 20:45:05,470:INFO:version 3.3.0
2024-04-02 20:45:05,470:INFO:Initializing setup()
2024-04-02 20:45:05,470:INFO:self.USI: 81c0
2024-04-02 20:45:05,470:INFO:self._variable_keys: {'target_param', '_available_plots', 'transform_target_param', 'X_train', 'memory', 'gpu_n_jobs_param', 'logging_param', 'fold_shuffle_param', 'y', 'y_train', 'fold_generator', 'n_jobs_param', 'exp_name_log', 'y_test', 'exp_id', 'seed', 'idx', 'html_param', 'gpu_param', 'X', '_ml_usecase', 'data', 'X_test', 'log_plots_param', 'pipeline', 'USI', 'fold_groups_param'}
2024-04-02 20:45:05,471:INFO:Checking environment
2024-04-02 20:45:05,471:INFO:python_version: 3.11.7
2024-04-02 20:45:05,471:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-04-02 20:45:05,471:INFO:machine: AMD64
2024-04-02 20:45:05,471:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-02 20:45:05,480:INFO:Memory: svmem(total=6312697856, available=719097856, percent=88.6, used=5593600000, free=719097856)
2024-04-02 20:45:05,480:INFO:Physical Core: 4
2024-04-02 20:45:05,481:INFO:Logical Core: 8
2024-04-02 20:45:05,481:INFO:Checking libraries
2024-04-02 20:45:05,481:INFO:System:
2024-04-02 20:45:05,481:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-04-02 20:45:05,481:INFO:executable: C:\Users\Caplogy_Data_002\anaconda3\python.exe
2024-04-02 20:45:05,481:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-02 20:45:05,481:INFO:PyCaret required dependencies:
2024-04-02 20:45:07,687:INFO:                 pip: 23.3.1
2024-04-02 20:45:07,687:INFO:          setuptools: 68.2.2
2024-04-02 20:45:07,687:INFO:             pycaret: 3.3.0
2024-04-02 20:45:07,687:INFO:             IPython: 8.20.0
2024-04-02 20:45:07,687:INFO:          ipywidgets: 7.6.5
2024-04-02 20:45:07,687:INFO:                tqdm: 4.65.0
2024-04-02 20:45:07,687:INFO:               numpy: 1.26.4
2024-04-02 20:45:07,687:INFO:              pandas: 2.1.4
2024-04-02 20:45:07,687:INFO:              jinja2: 3.1.3
2024-04-02 20:45:07,688:INFO:               scipy: 1.11.4
2024-04-02 20:45:07,688:INFO:              joblib: 1.2.0
2024-04-02 20:45:07,688:INFO:             sklearn: 1.4.1.post1
2024-04-02 20:45:07,688:INFO:                pyod: 1.1.3
2024-04-02 20:45:07,688:INFO:            imblearn: 0.12.0
2024-04-02 20:45:07,688:INFO:   category_encoders: 2.6.3
2024-04-02 20:45:07,688:INFO:            lightgbm: 4.3.0
2024-04-02 20:45:07,688:INFO:               numba: 0.59.0
2024-04-02 20:45:07,688:INFO:            requests: 2.31.0
2024-04-02 20:45:07,688:INFO:          matplotlib: 3.7.5
2024-04-02 20:45:07,688:INFO:          scikitplot: 0.3.7
2024-04-02 20:45:07,688:INFO:         yellowbrick: 1.5
2024-04-02 20:45:07,689:INFO:              plotly: 5.20.0
2024-04-02 20:45:07,689:INFO:    plotly-resampler: Not installed
2024-04-02 20:45:07,689:INFO:             kaleido: 0.2.1
2024-04-02 20:45:07,689:INFO:           schemdraw: 0.15
2024-04-02 20:45:07,689:INFO:         statsmodels: 0.14.0
2024-04-02 20:45:07,689:INFO:              sktime: 0.28.0
2024-04-02 20:45:07,689:INFO:               tbats: 1.1.3
2024-04-02 20:45:07,689:INFO:            pmdarima: 2.0.4
2024-04-02 20:45:07,689:INFO:              psutil: 5.9.0
2024-04-02 20:45:07,689:INFO:          markupsafe: 2.1.3
2024-04-02 20:45:07,689:INFO:             pickle5: Not installed
2024-04-02 20:45:07,690:INFO:         cloudpickle: 2.2.1
2024-04-02 20:45:07,690:INFO:         deprecation: 2.1.0
2024-04-02 20:45:07,690:INFO:              xxhash: 3.4.1
2024-04-02 20:45:07,690:INFO:           wurlitzer: Not installed
2024-04-02 20:45:07,690:INFO:PyCaret optional dependencies:
2024-04-02 20:45:12,600:INFO:                shap: 0.45.0
2024-04-02 20:45:12,600:INFO:           interpret: Not installed
2024-04-02 20:45:12,600:INFO:                umap: Not installed
2024-04-02 20:45:12,600:INFO:     ydata_profiling: Not installed
2024-04-02 20:45:12,600:INFO:  explainerdashboard: Not installed
2024-04-02 20:45:12,600:INFO:             autoviz: Not installed
2024-04-02 20:45:12,600:INFO:           fairlearn: Not installed
2024-04-02 20:45:12,600:INFO:          deepchecks: Not installed
2024-04-02 20:45:12,601:INFO:             xgboost: Not installed
2024-04-02 20:45:12,601:INFO:            catboost: Not installed
2024-04-02 20:45:12,601:INFO:              kmodes: Not installed
2024-04-02 20:45:12,601:INFO:             mlxtend: Not installed
2024-04-02 20:45:12,601:INFO:       statsforecast: Not installed
2024-04-02 20:45:12,601:INFO:        tune_sklearn: Not installed
2024-04-02 20:45:12,601:INFO:                 ray: Not installed
2024-04-02 20:45:12,601:INFO:            hyperopt: Not installed
2024-04-02 20:45:12,601:INFO:              optuna: Not installed
2024-04-02 20:45:12,602:INFO:               skopt: Not installed
2024-04-02 20:45:12,602:INFO:              mlflow: 2.11.3
2024-04-02 20:45:12,602:INFO:              gradio: 4.24.0
2024-04-02 20:45:12,602:INFO:             fastapi: 0.110.0
2024-04-02 20:45:12,602:INFO:             uvicorn: 0.29.0
2024-04-02 20:45:12,602:INFO:              m2cgen: Not installed
2024-04-02 20:45:12,602:INFO:           evidently: Not installed
2024-04-02 20:45:12,602:INFO:               fugue: Not installed
2024-04-02 20:45:12,602:INFO:           streamlit: 1.32.2
2024-04-02 20:45:12,603:INFO:             prophet: Not installed
2024-04-02 20:45:12,603:INFO:None
2024-04-02 20:45:12,603:INFO:Set up data.
2024-04-02 20:45:12,623:INFO:Set up folding strategy.
2024-04-02 20:45:12,624:INFO:Set up train/test split.
2024-04-02 20:45:12,639:INFO:Set up index.
2024-04-02 20:45:12,639:INFO:Assigning column types.
2024-04-02 20:45:12,644:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-02 20:45:12,645:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,660:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,785:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:12,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:12,882:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,890:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-02 20:45:12,900:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,131:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-02 20:45:13,139:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,343:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,355:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,573:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-02 20:45:13,598:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:13,842:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-02 20:45:13,948:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,028:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-02 20:45:14,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,484:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-02 20:45:14,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-02 20:45:14,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:14,891:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-02 20:45:15,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:15,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:15,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:15,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:15,334:INFO:Preparing preprocessing pipeline...
2024-04-02 20:45:15,334:INFO:Set up target transformation.
2024-04-02 20:45:15,334:INFO:Set up simple imputation.
2024-04-02 20:45:15,339:INFO:Set up encoding of ordinal features.
2024-04-02 20:45:15,341:INFO:Set up encoding of categorical features.
2024-04-02 20:45:15,342:INFO:Set up column name cleaning.
2024-04-02 20:45:15,673:INFO:Finished creating preprocessing pipeline.
2024-04-02 20:45:15,738:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CAPLOG~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transformer...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': AGSL    0
GIA     1
NaN    -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-04-02 20:45:15,739:INFO:Creating final display dataframe.
2024-04-02 20:45:16,480:INFO:Setup _display_container:                     Description         Value
0                    Session id          5070
1                        Target         Price
2                   Target type    Regression
3           Original data shape     (6000, 8)
4        Transformed data shape    (6000, 29)
5   Transformed train set shape    (4200, 29)
6    Transformed test set shape    (1800, 29)
7              Numeric features             1
8          Categorical features             6
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Maximum one-hot encoding            25
14              Encoding method          None
15             Transform target          True
16      Transform target method   yeo-johnson
17               Fold Generator         KFold
18                  Fold Number            10
19                     CPU Jobs            -1
20                      Use GPU         False
21               Log Experiment  MlflowLogger
22              Experiment Name       diamond
23                          USI          81c0
2024-04-02 20:45:16,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:16,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:16,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:16,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-02 20:45:16,951:WARNING:C:\Users\Caplogy_Data_002\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-02 20:45:16,951:INFO:Logging experiment in loggers
2024-04-02 20:45:17,646:INFO:SubProcess save_model() called ==================================
2024-04-02 20:45:17,790:INFO:Initializing save_model()
2024-04-02 20:45:17,790:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\CAPLOG~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transformer...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': AGSL    0
GIA     1
NaN    -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\CAPLOG~1\AppData\Local\Temp\tmpp51p1xam\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CAPLOG~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transformer...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': AGSL    0
GIA     1
NaN    -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-02 20:45:17,790:INFO:Adding model into prep_pipe
2024-04-02 20:45:17,790:WARNING:Only Model saved as it was a pipeline.
2024-04-02 20:45:17,824:INFO:C:\Users\CAPLOG~1\AppData\Local\Temp\tmpp51p1xam\Transformation Pipeline.pkl saved in current working directory
2024-04-02 20:45:17,884:INFO:Pipeline(memory=FastMemory(location=C:\Users\CAPLOG~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transformer...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': AGSL    0
GIA     1
NaN    -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-04-02 20:45:17,884:INFO:save_model() successfully completed......................................
2024-04-02 20:45:18,083:INFO:SubProcess save_model() end ==================================
2024-04-02 20:45:18,254:INFO:setup() successfully completed in 11.61s...............
2024-04-02 20:45:33,493:INFO:Initializing create_model()
2024-04-02 20:45:33,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000283C2285690>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-02 20:45:33,494:INFO:Checking exceptions
2024-04-02 20:45:33,536:INFO:Importing libraries
2024-04-02 20:45:33,536:INFO:Copying training dataset
2024-04-02 20:45:33,552:INFO:Defining folds
2024-04-02 20:45:33,552:INFO:Declaring metric variables
2024-04-02 20:45:33,561:INFO:Importing untrained model
2024-04-02 20:45:33,570:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-02 20:45:33,586:INFO:Starting cross validation
2024-04-02 20:45:33,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-02 20:46:19,225:INFO:Calculating mean and std
2024-04-02 20:46:19,292:INFO:Creating metrics dataframe
2024-04-02 20:46:19,420:INFO:Finalizing model
2024-04-02 20:46:19,769:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-02 20:46:19,771:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000182 seconds.
2024-04-02 20:46:19,771:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-04-02 20:46:19,771:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-04-02 20:46:19,771:INFO:[LightGBM] [Info] Total Bins 209
2024-04-02 20:46:19,772:INFO:[LightGBM] [Info] Number of data points in the train set: 4200, number of used features: 27
2024-04-02 20:46:19,773:INFO:[LightGBM] [Info] Start training from score 2.600275
2024-04-02 20:46:20,126:INFO:Creating Dashboard logs
2024-04-02 20:46:20,136:INFO:Model: Light Gradient Boosting Machine
2024-04-02 20:46:20,352:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 5070, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-04-02 20:46:20,756:INFO:Initializing predict_model()
2024-04-02 20:46:20,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000283C2285690>, estimator=LGBMRegressor(n_jobs=-1, random_state=5070), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000283CB1C8040>)
2024-04-02 20:46:20,756:INFO:Checking exceptions
2024-04-02 20:46:20,757:INFO:Preloading libraries
2024-04-02 20:46:20,899:WARNING:C:\Users\Caplogy_Data_002\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-04-02 20:46:22,093:WARNING:C:\Users\Caplogy_Data_002\anaconda3\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-02 20:46:55,742:INFO:Uploading results into container
2024-04-02 20:46:55,743:INFO:Uploading model into container now
2024-04-02 20:46:55,766:INFO:_master_model_container: 1
2024-04-02 20:46:55,766:INFO:_display_container: 2
2024-04-02 20:46:55,768:INFO:LGBMRegressor(n_jobs=-1, random_state=5070)
2024-04-02 20:46:55,771:INFO:create_model() successfully completed......................................
2024-04-02 20:50:44,359:INFO:Soft dependency imported: fastapi: 0.110.0
2024-04-02 20:50:44,360:INFO:Soft dependency imported: uvicorn: 0.29.0
2024-04-02 20:50:44,362:INFO:Soft dependency imported: pydantic: 2.6.4
2024-04-02 20:50:44,452:INFO:Initializing save_model()
2024-04-02 20:50:44,452:INFO:save_model(model=LGBMRegressor(n_jobs=-1, random_state=5070), model_name=my_first_api, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CAPLOG~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transformer...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': AGSL    0
GIA     1
NaN    -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-02 20:50:44,453:INFO:Adding model into prep_pipe
2024-04-02 20:50:44,502:INFO:my_first_api.pkl saved in current working directory
2024-04-02 20:50:44,572:INFO:Pipeline(memory=Memory(location=None),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['Carat Weight'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'P...
                ('onehot_encoding',
                 TransformerWrapper(include=['Cut', 'Color', 'Clarity',
                                             'Polish', 'Symmetry'],
                                    transformer=OneHotEncoder(cols=['Cut',
                                                                    'Color',
                                                                    'Clarity',
                                                                    'Polish',
                                                                    'Symmetry'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=5070))])
2024-04-02 20:50:44,573:INFO:save_model() successfully completed......................................
